<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        WpUFAGCmLABalQUAYKYsAFqVBQBgpiwAWpUFAGCmLABalQUAYKYsAFqVBQBgpiwAWpUFAGCmLABalQUA
        YKYsAFqVBQBgpiwAWpUFAGCmLABalQUAYKYsAFqVBQBgpiwAWpUFAGCmLABalQUAYKYsAFqVBQBgpiwA
        WpUFAGCmLABalQUAYKYsAFqVBQBgpiwAWpUFAGCmLABalQUAYKYsAFqVBQBgpiwAWpUFAGCmLABalQUA
        YKYsAFqVBQBgpiwA3XdJ+thMOi4BMEMWgO77QAKAUbMAdJ8FAIDRswB0nwUAgNGzAHSfBQCA0bMAdJ8F
        AIDRswB0nwUAgNGzAHSfBQCA0bMAdJ8FAIDRswB0nwUAgNGzAHSfBQCA0bMAdJ8FAIDRswB0nwUAgNGz
        AHSfBQCA0bMAdJ8FAIDRswB0nwUAgNGzAHSfBQCA0bMAdJ8FAIDRswB0nwUAgNGzAHSfBQCA0bMAdJ8F
        AIDRswB0nwUAgNGzAHSfBQCA0bMAdJ8FAIDRswB0nwUAgNGzAHSfBQCA0bMAdJ8FAIDRswB0nwUAgNGz
        AHSfBQCA0bMAdJ8FAIDRswB0nwUAgNGzAHSfBQCA0bMAdJ8FAIDRswB0nwUAgNGzAHSfBQCA0bMAdJ8F
        AIDRswB0nwUAgNGzAHSfBQCA0bMAdJ8FAIDRswB0nwUAgNGzAHSfBQCA0bMAdJ8FAIDRswB0nwUAgNGz
        AHSfBQCA0bMAdJ8FAIDRswB0nwUAgNGzAHSfBQCA0bMAdJ8FAIDRswB0nwUAgNGzAHSfBQCA0bMAdJ8F
        AIDROyPVEqDuOiYBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAPG3Z8v8B
        2rtRbVGKEOMAAAAASUVORK5CYII=
</value>
  </data>
</root>